# Default values for node-red.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- Number of nodes
replicaCount: 1

image:
  # -- The image registry to pull from
  registry: docker.io
  # -- The image repository to pull from
  repository: nodered/node-red
  # -- The image pull policy
  pullPolicy: IfNotPresent
  # -- The image tag to pull, default: `Chart.appVersion`
  tag: ""

# -- The image pull secrets
imagePullSecrets: ""

# -- Provide a name in place of node-red
nameOverride: ""
# -- String to fully override "node-red.fullname"
fullnameOverride: ""

npmrc:
  # -- Enable custom npmrc config
  enabled: false
  # -- Configuration to use any compatible registry
  registry: "https://registry.npmjs.org"

# -- node-red env, see more environment variables in the [node-red documentation](https://nodered.org/docs/getting-started/docker)
env: []
  # Possible Values:
  # TZ:
  # NODE_OPTIONS:
  # NODE_RED_ENABLE_PROJECTS:
  # NODE_RED_ENABLE_SAFE_MODE:
  # FLOWS:
  # example:
  # env:
  # - name: "NODE_RED_ENABLE_SAFE_MODE"
  #   value: ""

serviceAccount:
  # Specifies whether a service account should be created
  # -- Create service account
  create: true
  # Annotations to add to the service account
  # -- Additional ServiceAccount annotations
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  # -- Service account name to use, when empty will be set to created account if
  name: ""

# -- Pod annotations
podAnnotations: {}

# -- Pod Security Context see [values.yaml](values.yaml)
podSecurityContext: {}
  # fsGroup: 2000

# -- Security Context see [values.yaml](values.yaml)
securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  # -- Kubernetes service type
  type: ClusterIP
  # -- Kubernetes port where service is exposed
  port: 1880

persistence:
  # -- Use persistent volume to store data
  enabled: false
  ## node-red data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  # -- Type of persistent volume claim
  # storageClass: "-"
  ##
  ## If you want to reuse an existing claim, you can pass the name of the PVC using
  ## the existingClaim variable
  # -- Use an existing PVC to persist data
  # existingClaim: your-claim
  # -- Persistence access mode
  accessMode: ReadWriteOnce
  # -- Size of persistent volume claim
  size: 5Gi

ingress:
  # -- Enable an ingress resource for the server
  enabled: false
  # -- Defines which ingress controller will implement the resource
  className: ""
  # -- Additional ingress annotations
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    # -- Ingress accepted hostnames
    - host: chart-example.local
      paths:
          # -- The base path
        - path: /
          # --  Ingress type of path
          pathType: ImplementationSpecific
  # --  Ingress TLS configuration
  tls: []
    # -- Secret name for the certificate
    # - secretName: chart-example-tls
    # -- Hostnames for the Ingress
    # hosts:
    #  - chart-example.local
    # -- Certificate used by the Cert-Manager
    # certificate:
    # -- Enable certificate
    #   enabled: true
    # -- Name of the certificate default: `$fullname-cert-$index`
    #   name: ""
    # -- Reference of ClusterIssuers or Issuer
    #   issuerRef:
    # -- Kind of the Issuer
    #     kind: ClusterIssuer
    # -- Name of the Issuer
    #     name: "test"

# -- CPU/Memory resource requests/limits
resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# -- Node selector
nodeSelector: {}

# -- Toleration labels for pod assignment
tolerations: []

# -- The affinity constraint
affinity: {}
